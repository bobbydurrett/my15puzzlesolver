Working on a 15 puzzle solver in Python for Rosetta Code:

http://rosettacode.org/wiki/15_puzzle_solver

astar.py is my A* algorithm attempt.
stuck on about 3 seconds for a 21 move puzzle.
not fast enough for the RC 52 move puzzle.

seems to hit 2 gigabyte limit on 30 move puzzle.
Could try 64 bit python to use more memory
or try optimizing memory usage.

seems to hit the 2 gig limit at about 1.6 million 
positions examined.

postest.py - created list of 5 million positions
in 2 gig of memory. Need to test inserting
this many in the priority queue.

idastar.py is my IDA* attempt. This is on the 
back burner while I'm working on my A* version.

Got the 30 move puzzle to run with 64 bit windows
version of Python 3.7.1

1700000 positions examined
1800000 positions examined
1900000 positions examined
2000000 positions examined
2100000 positions examined
2200000 positions examined
2300000 positions examined

Path length = 30

Path using rlud:

ddluuuldlurrdrdlllurrrullddrdr

Run time in seconds: 168.38073773099998

